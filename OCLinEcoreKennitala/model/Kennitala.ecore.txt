package kennitala : _'dk.ingi.petur.kennitala' = 'http://petur.ingi.dk/kennitala'
{
	class Kennitala
	{
		attribute value : String[1];
		attribute year : Integer[1] { derived readonly volatile } { initial: (if old = 8 or old = 9 then '1' + old?.toString() else '20' endif + self.value.substring(5, 6))?.toInteger(); }
		attribute month : Integer[1] { derived readonly volatile } { initial: self.value.substring(3, 4)?.toInteger(); }
		attribute day : Integer[1] { derived readonly volatile } { initial: self.value.substring(1, 2)?.toInteger(); }
		attribute old : Integer[1] { derived readonly volatile } { initial: self.value.substring(10, 10)?.toInteger(); }
		attribute vartala : Integer[1] { derived readonly volatile } { initial: self.value.substring(9, 9)?.toInteger(); }
		invariant valueLength: value.size() = 10;
		invariant monthValid: Set{1 .. 12}->includes(self.month);
		invariant dayValid: let daysInMonth : Integer = if Set{1, 3, 5, 7, 8, 10, 12}->includes(self.month) then 31 else 30 endif in day <= daysInMonth - if month = 2 then if year.mod(4) = 0 and ((year.mod(100) <> 0 or year.mod(400) = 0)) then 1 else 2 endif else 0 endif;
		invariant oldValid: Set{8, 9, 0}->includes(self.old);
		invariant vartalaValid: let samleif : Integer = (self.value.substring(1, 1)?.toInteger() * 3 + self.value.substring(2, 2)?.toInteger() * 2 + self.value.substring(3, 3)?.toInteger() * 7 + self.value.substring(4, 4)?.toInteger() * 6 + self.value.substring(5, 5)?.toInteger() * 5 + self.value.substring(6, 6)?.toInteger() * 4 + self.value.substring(7, 7)?.toInteger() * 3 + self.value.substring(8, 8)?.toInteger() * 2).mod(11) in 11 - if (samleif = 0) then 11 else samleif endif = self.vartala;
	}
}